# 설치
1) MySQL 5.7 설치 (default)
	mysql.com -> download -> db connector (?!) -> mysql.j (?!) 다운로드함.
	이 중에서 C:\dev\myLib 경로에 mysql-connector-java-5.1.44-bin.jar 파일만 붙임
2) MySQL Workbench 실행
	- root로 들어가서 스키마 생성
	- 새로운 user를 생성 > oracle 스키마 연결
	
3) STS 실행
	- spring에 sql development kit 마켓플레이스에서 다운
	- window -> show view -> others -> data management -> data source explorer 실행 . => new connection 연결함.(1에서 다운받은 jar파일 사용) 
		name : oracle / password : oracle

# 연결
1) maven repository : https://mvnrepository.com
2) spring jdbc 검색 후 버전 선택
3) MySQL Connector/J : lib랑 같은 버전으로 선택
4) pom.xml에 추가
5) servlet-context.xml
	<!-- data source -->	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="url" value="jdbc:mysql://localhost:3306/oracle"/>
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<beans:property name="username" value="oracle"/>
		<beans:property name="password" value="oracle"/>
	</beans:bean>
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	
#
1) Class.forName();
2) Connection cn = DriverManager.getConnection(url, id, pwd);
3) PreparedStatement ps = cn.preareStatement(sql);
	ps.setString(1, "");
4) ResultSet rs = ps.excuteQuery();

5) while(rs.next()) {
	VO vo = new VO
	vo.set...(rs.getInt(".."));
	vo.set...(rs.getInt(".."));
	vo.set...(rs.getInt(".."));
	
	list.add(vo)
}